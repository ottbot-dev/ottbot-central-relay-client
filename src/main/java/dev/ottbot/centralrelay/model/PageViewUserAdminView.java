/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.ottbot.centralrelay.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.ottbot.centralrelay.model.UserAdminView;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PageViewUserAdminView
 */
@JsonPropertyOrder({
  PageViewUserAdminView.JSON_PROPERTY_CONTENT,
  PageViewUserAdminView.JSON_PROPERTY_HAS_NEXT_PAGE,
  PageViewUserAdminView.JSON_PROPERTY_PAGE_NUMBER,
  PageViewUserAdminView.JSON_PROPERTY_TOTAL_COUNT,
  PageViewUserAdminView.JSON_PROPERTY_TOTAL_PAGES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-22T15:30:33.297029192Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class PageViewUserAdminView {
  public static final String JSON_PROPERTY_CONTENT = "content";
  @javax.annotation.Nullable
  private List<UserAdminView> content = new ArrayList<>();

  public static final String JSON_PROPERTY_HAS_NEXT_PAGE = "hasNextPage";
  @javax.annotation.Nullable
  private Boolean hasNextPage;

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  @javax.annotation.Nullable
  private Long pageNumber;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  @javax.annotation.Nullable
  private Long totalCount;

  public static final String JSON_PROPERTY_TOTAL_PAGES = "totalPages";
  @javax.annotation.Nullable
  private Long totalPages;

  public PageViewUserAdminView() {
  }

  public PageViewUserAdminView content(@javax.annotation.Nullable List<UserAdminView> content) {
    
    this.content = content;
    return this;
  }

  public PageViewUserAdminView addContentItem(UserAdminView contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<>();
    }
    this.content.add(contentItem);
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserAdminView> getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(@javax.annotation.Nullable List<UserAdminView> content) {
    this.content = content;
  }


  public PageViewUserAdminView hasNextPage(@javax.annotation.Nullable Boolean hasNextPage) {
    
    this.hasNextPage = hasNextPage;
    return this;
  }

  /**
   * Get hasNextPage
   * @return hasNextPage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_NEXT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasNextPage() {
    return hasNextPage;
  }


  @JsonProperty(JSON_PROPERTY_HAS_NEXT_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasNextPage(@javax.annotation.Nullable Boolean hasNextPage) {
    this.hasNextPage = hasNextPage;
  }


  public PageViewUserAdminView pageNumber(@javax.annotation.Nullable Long pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Get pageNumber
   * @return pageNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPageNumber() {
    return pageNumber;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(@javax.annotation.Nullable Long pageNumber) {
    this.pageNumber = pageNumber;
  }


  public PageViewUserAdminView totalCount(@javax.annotation.Nullable Long totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Get totalCount
   * @return totalCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(@javax.annotation.Nullable Long totalCount) {
    this.totalCount = totalCount;
  }


  public PageViewUserAdminView totalPages(@javax.annotation.Nullable Long totalPages) {
    
    this.totalPages = totalPages;
    return this;
  }

  /**
   * Get totalPages
   * @return totalPages
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalPages() {
    return totalPages;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalPages(@javax.annotation.Nullable Long totalPages) {
    this.totalPages = totalPages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageViewUserAdminView pageViewUserAdminView = (PageViewUserAdminView) o;
    return Objects.equals(this.content, pageViewUserAdminView.content) &&
        Objects.equals(this.hasNextPage, pageViewUserAdminView.hasNextPage) &&
        Objects.equals(this.pageNumber, pageViewUserAdminView.pageNumber) &&
        Objects.equals(this.totalCount, pageViewUserAdminView.totalCount) &&
        Objects.equals(this.totalPages, pageViewUserAdminView.totalPages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, hasNextPage, pageNumber, totalCount, totalPages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageViewUserAdminView {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    hasNextPage: ").append(toIndentedString(hasNextPage)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

